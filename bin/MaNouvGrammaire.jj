/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = true;}PARSER_BEGIN(SQLParser)
public class SQLParser{  public static void main(String args []) throws ParseException  {    SQLParser parser = new SQLParser(System.in);
    //SimpleNode node = parser.CreateViewStatement();
    //node.dump(" ");    while (true)    {      System.out.println("Reading from standard input...");      System.out.print("Enter an expression SQL SELECT;:");      try      {        switch (SQLParser.SelectStatment())        {          case 0:           System.out.println("OK.");          break;          //case 1 :           //System.out.println("Goodbye.");          //break;          default :           break;        }      }      catch (Exception e)      {        System.out.println("NOK.");        System.out.println(e.getMessage());        SQLParser.ReInit(System.in);      }      catch (Error e)      {        System.out.println("Oops.");        System.out.println(e.getMessage());        break;      }    }  }}PARSER_END(SQLParser)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* OPERATORS */{  < PLUS : "+" >| < MINUS : "-" >| < MULTIPLY : "*" >| < DIVIDE : "/" >
| < SEMICOLON: ";" >}
TOKEN:
{
  <CREATE: "create">
| <VIEW: "view">
| <AS: "as">
| <SELECT: "select">
| <FROM: "from">
| <WITH: "with">
| <CASCADED: "cascaded">
| <LOCAL: "local">
| <CHECK: "check">
| <OPTION: "option">
}TOKEN :
{
  < Id: ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9"] )* >
}
TOKEN :{  < CONSTANT : (< DIGIT >)+ >| < #DIGIT : [ "0"-"9" ] >}

int one_line() :{}{  sum() ";"  {    return 0;  }| ";"  {    return 1;  }}void sum() :{}{  term()  (    (      < PLUS >    | < MINUS >    )    term()  )*}void term() :{}{  unary()  (    (      < MULTIPLY >    | < DIVIDE >    )    unary()  )*}void unary() :{}{  < MINUS > element()| element()}void element() :{}{  < CONSTANT >| "(" sum() ")"}
/*
create view :CREATE VIEW V1 AS SELECT COL1 FROM T1 WITH CASCADED/LOCAL CHECK OPTION;
*/
int CreateViewStatement() :
{}
{
  <CREATE> <VIEW> <Id> <AS> SelectStatment()
  [ <WITH> [ ( <CASCADED> | <LOCAL> ) ] <CHECK> <OPTION> ]
  <SEMICOLON>
  <EOF>
  { return 0;}
}

_Relation SelectStatment() :{Token t; List<Attribut > l;}{
  <SELECT> l=SCHEMA() <FROM> t=<Id> <SEMICOLON> { return createProjection(t.image,l);}
  
}

List<Attribut > SCHEMA():{Token t; List<Attribut > l = new ArrayList<Attribut >();}{
  "*" {return l; }
| t=< Id > {l.add(new Attribut(t.image,VOID.type); } ("," < Id >{l.add(new Attribut(t.image,VOID.type); })* {return l; }
}

